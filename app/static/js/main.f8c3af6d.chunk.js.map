{"version":3,"sources":["Paint.js","modules/components/AppBar.js","modules/components/Toolbar.js","modules/views/AppAppBar.js","modules/views/AppFooter.js","App.js","serviceWorker.js","index.js"],"names":["Paint","canvas","document","getElementById","ctx","getContext","resize","width","window","innerWidth","height","innerHeight","fillStyle","fillRect","addEventListener","e","buttons","beginPath","lineWidth","lineCap","strokeStyle","moveTo","pos","x","y","setPosition","lineTo","stroke","canvasDom","touchEvent","rect","getBoundingClientRect","touches","clientX","left","clientY","top","getTouchPos","touch","mouseEvent","MouseEvent","dispatchEvent","react_default","a","createElement","id","style","backgroundColor","Component","withStyles","theme","root","color","palette","common","white","props","AppBar_default","Object","assign","elevation","position","defineProperty","breakpoints","up","Toolbar_default","title","fontSize","toolbar","justifyContent","flex","leftLinkActive","right","display","rightLink","marginLeft","spacing","unit","cursor","classes","components_AppBar","components_Toolbar","className","Link_default","variant","underline","Button_default","onClick","clear","placeholder","primary","main","footer","bottom","light","predict","rows","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","data","refresh","answerReady","handleClose","setState","length","push","name1","name2","Promise","resolve","reject","blob","dataURI","byteString","split","indexOf","atob","unescape","mimeString","ia","Uint8Array","i","charCodeAt","console","log","Blob","type","dataURItoBlob","toDataURL","xhr","XMLHttpRequest","loc","location","open","concat","protocol","hostname","port","onerror","responseText","onload","readyState","response","JSON","parse","target","fileData","FormData","append","send","clearRect","_this2","loading","callBackendAPI","then","res","catch","err","Dialog_default","onClose","aria-labelledby","aria-describedby","DialogTitle_default","DialogContent_default","DialogContentText_default","DialogActions_default","autoFocus","views_AppAppBar","bind","divStyle","Table_default","tableStyle","TableHead_default","TableRow_default","TableCell_default","colSpan","align","TableBody_default","map","row","key","component","scope","cell1Style","cell2Style","src_Paint","LinearProgress_default","views_AppFooter","alignItems","marginTop","paddingRight","borderRightWidth","borderRightColor","borderRightStyle","Boolean","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f8c3af6d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass Paint extends Component {\n\n    componentDidMount() {\n        // set canvas id to variable\n        let canvas= document.getElementById(\"draw\");\n        let ctx = canvas.getContext(\"2d\");\n\n        // get canvas 2D context and set it to the correct size\n        resize();\n\n        // resize canvas when window is resized\n        window.addEventListener(\"resize\", resize);\n        document.addEventListener(\"mousemove\", draw);\n        document.addEventListener(\"mousedown\", setPosition);\n        document.addEventListener(\"mouseenter\", setPosition);\n\n        // Set up touch events for mobile, etc\n        canvas.addEventListener(\"touchstart\", function (e) {\n            let mousePos = getTouchPos(canvas, e);\n            let touch = e.touches[0];\n            let mouseEvent = new MouseEvent(\"mousedown\", {\n                clientX: touch.clientX,\n                clientY: touch.clientY\n            });\n            canvas.dispatchEvent(mouseEvent);\n        }, false);\n        canvas.addEventListener(\"touchend\", function (e) {\n            let mouseEvent = new MouseEvent(\"mouseup\", {});\n            canvas.dispatchEvent(mouseEvent);\n        }, false);\n        canvas.addEventListener(\"touchmove\", function (e) {\n            let touch = e.touches[0];\n            let mouseEvent = new MouseEvent(\"mousemove\", {\n                clientX: touch.clientX,\n                clientY: touch.clientY\n            });\n            canvas.dispatchEvent(mouseEvent);\n        }, false);\n\n// Get the position of a touch relative to the canvas\n        function getTouchPos(canvasDom, touchEvent) {\n            let rect = canvasDom.getBoundingClientRect();\n            return {\n                x: touchEvent.touches[0].clientX - rect.left,\n                y: touchEvent.touches[0].clientY - rect.top\n            };\n        }\n\n        function resize() {\n            ctx.canvas.width = window.innerWidth - 230;\n            ctx.canvas.height = window.innerHeight-70;\n            ctx.fillStyle = 'white';\n            ctx.fillRect(0, 0, window.innerWidth - 230, window.innerHeight-70);\n        }\n        // last known position\n        var pos = { x: 0, y: 0 };\n\n        // new position from mouse events\n        function setPosition(e) {\n            pos.x = e.clientX - 230;\n            pos.y = e.clientY;\n        }\n        function draw(e) {\n            if (e.buttons !== 1) return; // if mouse is pressed.....\n\n            let color = '#000';\n\n            ctx.beginPath(); // begin the drawing path\n\n            ctx.lineWidth = 10; // width of line\n            ctx.lineCap = \"round\"; // rounded end cap\n            ctx.strokeStyle = color; // hex color of line\n\n            ctx.moveTo(pos.x, pos.y); // from position\n            setPosition(e);\n            ctx.lineTo(pos.x, pos.y); // to position\n\n            ctx.stroke(); // draw it!\n        }\n    }\n\n    render() {\n        return (\n            <canvas id=\"draw\" style={{top: 70, backgroundColor: '#fff'}}/>\n        );\n    }\n}\n\nexport default Paint;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport MuiAppBar from '@material-ui/core/AppBar';\n\nconst styles = theme => ({\n    root: {\n        color: theme.palette.common.white,\n    },\n});\n\nfunction AppBar(props) {\n    return <MuiAppBar elevation={0} position=\"static\" {...props} />;\n}\n\nAppBar.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(AppBar);\n\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport MuiToolbar from '@material-ui/core/Toolbar';\n\nexport const styles = theme => ({\n    root: {\n        height: 64,\n        [theme.breakpoints.up('sm')]: {\n            height: 70,\n        },\n    },\n});\n\nfunction Toolbar(props) {\n    return <MuiToolbar {...props} />;\n}\n\nexport default withStyles(styles)(Toolbar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Link from '@material-ui/core/Link';\nimport AppBar from '../components/AppBar';\nimport Toolbar from '../components/Toolbar';\nimport Button from '@material-ui/core/Button';\n\nconst styles = theme => ({\n    title: {\n        fontSize: 24,\n    },\n    //placeholder: toolbarStyles(theme).root,\n    toolbar: {\n        justifyContent: 'space-between',\n    },\n    left: {\n        flex: 1,\n    },\n    leftLinkActive: {\n        color: theme.palette.common.white,\n    },\n    right: {\n        flex: 1,\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n    rightLink: {\n        fontSize: 16,\n        color: theme.palette.common.white,\n        marginLeft: theme.spacing.unit * 3,\n        cursor: 'pointer'\n    }\n});\n\nfunction AppAppBar(props) {\n    const { classes } = props;\n\n    return (\n        <div>\n            <AppBar position=\"fixed\">\n                <Toolbar className={classes.toolbar}>\n                    <div className={classes.left} />\n                    <Link\n                        variant=\"h6\"\n                        underline=\"none\"\n                        color=\"inherit\"\n                        className={classes.title}\n                    >\n                        {'Doodle Predictor'}\n                    </Link>\n                    <div className={classes.right}>\n                        <Button className={classes.rightLink} onClick={props.clear}>Clear Palette</Button>\n                    </div>\n                </Toolbar>\n            </AppBar>\n            <div className={classes.placeholder} />\n        </div>\n    );\n}\n\nAppAppBar.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(AppAppBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Toolbar from '../components/Toolbar';\nimport Button from '@material-ui/core/Button';\n\nconst styles = theme => ({\n    title: {\n        fontSize: 24,\n    },\n    //placeholder: toolbarStyles(theme).root,\n    toolbar: {\n        justifyContent: 'space-between',\n    },\n    left: {\n        flex: 1,\n    },\n    leftLinkActive: {\n        color: theme.palette.common.white,\n    },\n    right: {\n        flex: 1,\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n    rightLink: {\n        fontSize: 16,\n        color: theme.palette.common.white,\n        marginLeft: theme.spacing.unit * 3,\n        cursor: 'pointer',\n        backgroundColor: theme.palette.primary.main\n    },\n    footer: {\n        bottom: 0,\n        backgroundColor: theme.palette.primary.light\n    }\n});\n\n\nfunction AppFooter(props) {\n    const { classes } = props;\n\n    return (\n        <div>\n            <div position=\"fixed\" className={classes.footer}>\n                <Toolbar className={classes.toolbar}>\n                    <div className={classes.left} />\n                    <Button className={classes.rightLink} onClick={props.predict}>Predict Class</Button>\n                    <div className={classes.right}/>\n                </Toolbar>\n            </div>\n            <div className={classes.placeholder} />\n        </div>\n    );\n}\n\nAppFooter.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(AppFooter);","import React, { Component } from 'react';\nimport './App.css';\nimport Paint from './Paint';\nimport AppAppBar from './modules/views/AppAppBar';\nimport AppFooter from './modules/views/AppFooter';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nfunction dataURItoBlob(dataURI) {\n  // convert base64/URLEncoded data component to raw binary data held in a string\n  let byteString;\n  if (dataURI.split(',')[0].indexOf('base64') >= 0)\n    byteString = atob(dataURI.split(',')[1]);\n  else\n    byteString = unescape(dataURI.split(',')[1]);\n\n  // separate out the mime component\n  let mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\n\n  // write the bytes of the string to a typed array\n  let ia = new Uint8Array(byteString.length);\n  for (let i = 0; i < byteString.length; i++) {\n    ia[i] = byteString.charCodeAt(i);\n  }\n  console.log(ia);\n\n  return new Blob([ia], {type:mimeString});\n}\nlet id = 0;\nlet rows = [];\nfunction createData(name1, name2) {\n  id += 1;\n  return { id, name1 , name2};\n}\n\n\nclass App extends Component {\n  state = {\n    data: null,\n    refresh: false,\n    answerReady: false\n  };\n\n  constructor(props) {\n    super(props);\n    let classes = ['apple', 'bat', 'bathtub', 'bed', 'bird', 'bridge', 'bus', 'bush', 'camel', 'car', 'ceiling_fan', 'cell_phone', 'coffee_cup', 'computer', 'cookie', 'donut', 'ear', 'eye', 'fence', 'flower', 'foot', 'hand', 'helicopter', 'horse', 'hot_air_balloon', 'key', 'ladder', 'lighthouse', 'mermaid', 'microphone', 'monkey', 'octopus', 'palm_tree', 'pants', 'paper_clip', 'piano', 'pig', 'rabbit', 'rain', 'scorpion', 'shoe', 'skateboard', 'squirrel', 'sweater', 'swing_set', 'tornado', 'truck', 'vase', 'wine_bottle'];\n    for(let id=0; id<classes.length; id += 2) {\n      rows.push(createData(classes[id], classes[id+1]));\n    }\n  }\n\n  componentDidMount() {\n  }\n  // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n  callBackendAPI() {\n    return new Promise((resolve, reject) => {\n      let canvas= document.getElementById(\"draw\");\n      let dataURL = canvas.toDataURL('image/png');\n      let blob = dataURItoBlob(dataURL);\n      let xhr = new XMLHttpRequest();\n      let loc = window.location;\n      xhr.open('POST', `${loc.protocol}//${loc.hostname}:${loc.port}/analyze`, true);\n      xhr.onerror = function() {reject(xhr.responseText);}\n      xhr.onload = function(e) {\n        if (this.readyState === 4) {\n          let response = JSON.parse(e.target.responseText);\n          resolve(`Result = ${response['result']}`);\n        }\n      };\n\n      let fileData = new FormData();\n      fileData.append('file', blob);\n      xhr.send(fileData);\n    })\n  };\n\n  clear() {\n    let canvas= document.getElementById(\"draw\");\n    let ctx = canvas.getContext(\"2d\");\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.fillStyle = 'white';\n    ctx.fillRect(0, 0, window.innerWidth, window.innerHeight-70);\n  }\n  handleClose = () => {\n    this.setState({ answerReady: false });\n  };\n\n  predict() {\n    this.setState({loading: true});\n    this.callBackendAPI()\n        .then(res => {\n          this.setState({ data: res, answerReady: true, loading: false })\n        })\n        .catch(err => console.log(err));\n  }\n\n  render() {\n    return (\n        <div className=\"App\">\n          <Dialog\n              open={this.state.answerReady}\n              onClose={this.handleClose}\n              aria-labelledby=\"alert-dialog-title\"\n              aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">{\"Prediction\"}</DialogTitle>\n            <DialogContent>\n              <DialogContentText id=\"alert-dialog-description\">\n                {this.state.data}\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={this.handleClose} color=\"primary\" autoFocus>\n                Close\n              </Button>\n            </DialogActions>\n          </Dialog>\n          <AppAppBar clear={this.clear.bind(this)}/>\n          <div style={divStyle}>\n            <Table style={tableStyle}>\n              <TableHead>\n                <TableRow>\n                  <TableCell colSpan={2} align={\"center\"}>Draw one of these</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rows.map(row => (\n                    <tr key={row.id}>\n                      <TableCell component=\"th\" scope=\"row\" style={cell1Style}>\n                        {row.name1}\n                      </TableCell>\n                      <TableCell component=\"th\" scope=\"row\" style={cell2Style}>\n                        {row.name2}\n                      </TableCell>\n                    </tr>\n                ))}\n              </TableBody>\n            </Table>\n            <Paint canvas={this.state.canvas} ctx={this.state.ctx}/>\n          </div>\n          {this.state.loading? <LinearProgress/>: ''}\n          <AppFooter predict={this.predict.bind(this)}/>\n        </div>\n    );\n  }\n}\n\nconst divStyle = {\n  display: 'flex',\n  alignItems: 'center'\n};\n\nconst tableStyle = {\n  marginTop:70\n};\n\nconst cell1Style = {\n  paddingRight: 0\n}\n\nconst cell2Style = {\n  borderRightWidth: 2,\n  borderRightColor: '#e0e0e0',\n  borderRightStyle: 'solid'\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}